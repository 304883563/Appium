# BUILD FILE SYNTAX: SKYLARK
load("//dotnet:selenium-dotnet-version.bzl", "SE_VERSION", "ASSEMBLY_VERSION")

genrule(
  name = 'net35',
  srcs = [ 'WebDriver.Support.csproj' ],
  bash = "echo '$(location //dotnet/src/webdriver:net35)' && dotnet build $SRCS --configuration Release --framework net35 --output $OUT /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=$OUT/../obj/ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  cmd_exe = "echo '$(location //dotnet/src/webdriver:net35)' && dotnet build %SRCS% --configuration Release --framework net35 --output %OUT% /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'net40',
  srcs = [ 'WebDriver.Support.csproj' ],
  bash = "echo '$(location //dotnet/src/webdriver:net40)' && dotnet build $SRCS --configuration Release --framework net40 --output $OUT /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=$OUT/../obj/ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  cmd_exe = "echo '$(location //dotnet/src/webdriver:net40)' && dotnet build %SRCS% --configuration Release --framework net40 --output %OUT% /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'net45',
  srcs = [ 'WebDriver.Support.csproj' ],
  bash = "echo '$(location //dotnet/src/webdriver:net45)' && dotnet build $SRCS --configuration Release --framework net45 --output $OUT /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=$OUT/../obj/ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  cmd_exe = "echo '$(location //dotnet/src/webdriver:net45)' && dotnet build %SRCS% --configuration Release --framework net45 --output %OUT% /p:Version={} /p:AssemblyVersion={} /p:FileVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'netstandard2.0',
  srcs = [ 'WebDriver.Support.csproj' ],
  bash = "echo '$(location //dotnet/src/webdriver:netstandard2.0)' && dotnet build $SRCS --configuration Release --framework netstandard2.0 --output $OUT /p:Version={} /p:AssemblyVersion={} /p:IntermediateOutputPath=$OUT/../obj/ /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  cmd_exe = "echo '$(location //dotnet/src/webdriver:netstandard2.0)' && dotnet build %SRCS% --configuration Release --framework netstandard2.0 --output %OUT% /p:Version={} /p:AssemblyVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'merge',
  srcs = [
    ':net35',
    ':net40',
    ':net45',
    ':netstandard2.0'
  ],
  cmd_exe = 
    'setlocal EnableDelayedExpansion && ' +
    '(if not exist %OUT% mkdir %OUT%) && ' +
    'for %%G in (%SRCS%) do (' +
      'set target_dir=%%G&& ' +
      'set platform_dir=%%G\\..&& ' +
      'for %%H in (!target_dir!) do (' +
        'for %%I in (!platform_dir!) do set platform_moniker=%%~nxI&& ' +
        '(if not exist %OUT%\\!platform_moniker! mkdir %OUT%\\!platform_moniker!) && ' +
        'copy !target_dir!\\WebDriver.Support.dll %OUT%\\!platform_moniker! &&' +
        'copy !target_dir!\\WebDriver.Support.xml %OUT%\\!platform_moniker!' +
      ')' +
    ')',
  out = 'lib'
)

genrule(
  name = 'pack',
  srcs = ['WebDriver.Support.nuspec'],
  cmd_exe = "$(exe //third_party/dotnet/nuget:nuget) pack %SRCS% /Properties packageid=Selenium.Support;version={} /Version {} /BasePath $(location :merge) /OutputDirectory %OUT%".format(SE_VERSION, SE_VERSION),
  out = 'dist',
  visibility = [ 'PUBLIC' ]
)

genrule(
  name = 'net35_strongnamed',
  srcs = [ 'WebDriver.Support.csproj' ],
  cmd = "echo '$(location //dotnet/src/webdriver:net35_strongnamed)' && dotnet build %SRCS% --configuration Release --framework net35 --output %OUT% /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(location //dotnet:keyfile) /p:Version={} /p:AssemblyVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'net40_strongnamed',
  srcs = [ 'WebDriver.Support.csproj' ],
  cmd = "echo '$(location //dotnet/src/webdriver:net40_strongnamed)' && dotnet build %SRCS% --configuration Release --framework net40 --output %OUT% /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(location //dotnet:keyfile) /p:Version={} /p:AssemblyVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'net45_strongnamed',
  srcs = [ 'WebDriver.Support.csproj' ],
  cmd = "echo '$(location //dotnet/src/webdriver:net45_strongnamed)' && dotnet build %SRCS% --configuration Release --framework net45 --output %OUT% /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(location //dotnet:keyfile) /p:Version={} /p:AssemblyVersion={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'netstandard2.0_strongnamed',
  srcs = [ 'WebDriver.Support.csproj' ],
  cmd = "echo '$(location //dotnet/src/webdriver:netstandard2.0_strongnamed)' && dotnet build %SRCS% --configuration Release --framework netstandard2.0 --output %OUT% /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(location //dotnet:keyfile) /p:Version={} /p:IntermediateOutputPath=%OUT%\..\obj\ /p:AssemblyVersion={} /p:FileVersion={} /p:BuildSystem=buck".format(SE_VERSION, ASSEMBLY_VERSION, ASSEMBLY_VERSION),
  out = 'bin'
)

genrule(
  name = 'merge_strongnamed',
  srcs = [
    ':net35_strongnamed',
    ':net40_strongnamed',
    ':net45_strongnamed',
    ':netstandard2.0_strongnamed'
  ],
  cmd_exe = 
    'setlocal EnableDelayedExpansion && ' +
    '(if not exist %OUT% mkdir %OUT%) && ' +
    'for %%G in (%SRCS%) do (' +
      'set target_dir=%%G&& ' +
      'set platform_dir=%%G\\..&& ' +
      'for %%H in (!target_dir!) do (' +
        'for %%I in (!platform_dir!) do set full_platform_moniker=%%~nxI&& ' +
        'for /f "delims=_" %%J in (\"!full_platform_moniker!\") do set platform_moniker=%%J&& ' +
        '(if not exist %OUT%\\!platform_moniker! mkdir %OUT%\\!platform_moniker!) && ' +
        'copy !target_dir!\\WebDriver.Support.dll %OUT%\\!platform_moniker! &&' +
        'copy !target_dir!\\WebDriver.Support.xml %OUT%\\!platform_moniker!' +
      ')' +
    ')',
  out = 'lib'
)

genrule(
  name = 'pack_strongnamed',
  srcs = ['WebDriver.Support.nuspec'],
  cmd_exe = "$(exe //third_party/dotnet/nuget:nuget) pack %SRCS% /Properties packageid=Selenium.Support.StrongNamed;version={} /Version {} /BasePath $(location :merge_strongnamed) /OutputDirectory %OUT%".format(SE_VERSION, SE_VERSION),
  out = 'dist',
  visibility = [ 'PUBLIC' ]
)
